version: '3'

services:
  # Infra
  api-gateway:
    image: nginx
    volumes:
      - ./infra/api-gateway/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 80:80
      - 8881:8881
    depends_on:
      - requests
    networks:
      - app-network
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.1
    environment:
      - node.name=node-1
      - discovery.type=single-node
    volumes:
      - ./infra/elasticsearch:/usr/share/elasticsearch/config
      - ./infra/elasticsearch/jvm.options:/usr/share/elasticsearch/config/jvm.options
      - ./infra/elasticsearch/log4j2.properties:/usr/share/elasticsearch/config/log4j2.properties
      - elastic_data:/usr/share/elasticsearch/data
    networks:
      - app-network

  logstash:
    image: docker.elastic.co/logstash/logstash:7.15.2
    depends_on:
      - elasticsearch
    volumes:
      - ./infra/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
    networks:
      - app-network

  kibana:
    image: docker.elastic.co/kibana/kibana:7.15.2
    depends_on:
      - logstash
    networks:
      - app-network

  db:
    image: mongo:latest
    container_name: db
    volumes:
      - mongo_storage:/data/db
    networks:
      - app-network

  # Serverless Functions
  requests:
    build:
      context: .
      dockerfile: ./functions/requests/Dockerfile
    environment:
      - MONGO_URI=mongodb://db:27017/tracking-detector
      - LOGSTASH_HOST=logstash
      - LOGSTASH_PORT=5044
    depends_on:
      - db
      - elasticsearch
      - logstash
      - kibana

    networks:
      - app-network

networks:
  app-network:


volumes:
  elastic_data: {}
  data: {}
  mongo_storage: {}
