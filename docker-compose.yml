version: '3.7'

name: tracking-detector

services:
  # Infra
  api-gateway:
    image: nginx
    volumes:
      - ./infra/api-gateway/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 80:80
      - 8881:8881
      - 8882:8882
    depends_on:
      - requests
      - loki
    networks:
      - app-network
  loki:
    image: grafana/loki:2.6.1

    volumes:
      - loki_data:/loki
      # - ./infra/loki/loki.yaml:/etc/config/loki.yaml
      # entrypoint:
      #   - /usr/bin/loki
      #   - -config.file=/etc/config/loki.yaml
    networks:
      - app-network
  promtail:
    image: grafana/promtail:2.6.1
    volumes:
      - ./infra/promtail/promtail-config.yml:/etc/promtail/config.yml
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/containers:/var/lib/docker/containers
    networks:
      - app-network
  grafana:
    image: grafana/grafana:9.2.2
    restart: unless-stopped
    volumes:
      - grafana_data:/var/lib/grafana
      - ./infra/grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./infra/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - app-network
    depends_on:
      - loki

  db:
    image: mongo:latest
    container_name: db
    volumes:
      - mongo_storage:/data/db
    networks:
      - app-network
    depends_on:
      - loki
    # Serverless Functions
  requests:
    build:
      context: .
      dockerfile: ./functions/requests/Dockerfile
    environment:
      - MONGO_URI=mongodb://db:27017/tracking-detector
    depends_on:
      - db
      - loki
    networks:
      - app-network
  export:
    build:
      context: .
      dockerfile: ./functions/export/Dockerfile
    environment:
      - MONGO_URI=mongodb://db:27017/tracking-detector
    depends_on:
      - db
      - loki
    networks:
      - app-network

networks:
  app-network:


volumes:
  minio_data: {}
  loki_data: {}
  grafana_data: {}
  data: {}
  mongo_storage: {}
